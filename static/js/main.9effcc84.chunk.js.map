{"version":3,"sources":["components/List.js","components/Todo.js","auth.context.js","components/Header.js","components/Auth.js","App.js","index.js"],"names":["list","props","react_default","a","createElement","items","map","item","key","id","onClick","bind","name","todo","_useState","useState","_useState2","Object","slicedToArray","inputIsValid","setImputIsValid","todoInputRef","useRef","_useReducer","useReducer","state","action","type","concat","payload","filter","_useReducer2","todoList","dispatch","useEffect","axios","get","then","result","todoData","data","todos","push","console","log","todoRemoveHandler","todoId","delete","res","catch","err","Fragment","placeholder","ref","onChange","event","target","value","trim","style","backgroundColor","todoName","current","post","setTimeout","todoItem","useMemo","List","authContext","React","createContext","status","login","Header","auth","useContext","AuthContext","onLoadTodos","onLoadAuth","app","page","setPage","_useState3","_useState4","authStates","setAuthStates","switchPage","pageName","className","auth_context","Provider","components_Header","Auth","Todo","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.9effcc84.chunk.js","sourcesContent":["import React from 'react'\n\nconst list = props => {\n\n    return <ul>\n    {props.items.map(item => (\n      <li key={item.id} onClick={props.onClick.bind(this, item.id)}>\n        {item.name}\n      </li>\n    ))}\n  </ul>\n}\n\nexport default list;","import React, {useState, useEffect, useReducer, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport List from './List'\nconst todo = props => {\n    const [inputIsValid, setImputIsValid] = useState(false)\n  //const [todoName, setTodoName] = useState('');\n  // const [submittedTodo, setSubmittedTodo] = useState(null);\n  // const [todoList, setTodoList] = useState([]);\n  //   const [todoState, setTodoState] = useState({ userInput: '', todoList: [] });\n\nconst todoInputRef = useRef()\n\n  const todoListReducer = (state, action) => {\n    switch (action.type) {\n      case 'ADD':\n        return state.concat(action.payload);\n      case 'SET':\n        return action.payload;\n      case 'REMOVE':\n        return state.filter(todo => todo.id !== action.payload);\n      default:\n        return state;\n    }\n  };\n\n  const [todoList, dispatch] = useReducer(todoListReducer, []);\n\n  useEffect(() => {\n    axios.get('https://hooks2.firebaseio.com/todos.json').then(result => {\n      const todoData = result.data;\n      const todos = [];\n      for (const key in todoData) {\n        todos.push({ id: key, name: todoData[key].name });\n      }\n      dispatch({ type: 'SET', payload: todos });\n    });\n    return () => {\n      console.log('Cleanup');\n    };\n  }, []);\n\n  const mouseMoveHandler = event => {\n    console.log(event.clientX, event.clientY);\n  };\n\n  const inputValidationHandler = event => {\n    if(event.target.value.trim()===''){\n        setImputIsValid(false)\n    } else {\n        setImputIsValid(true)\n    }\n  }\n\n  //useEffect(() => {\n  //  document.addEventListener('mousemove', mouseMoveHandler);\n  // return () => {\n  //   document.removeEventListener('mousemove', mouseMoveHandler);\n  // };\n  //}, []);\n\n  // useEffect(\n  //   () => {\n  //     if (submittedTodo) {\n  //       dispatch({ type: 'ADD', payload: submittedTodo });\n  //     }\n  //   },\n  //   [submittedTodo]\n  // );\n\n  //const inputChangeHandler = event => {\n    // setTodoState({\n    //   userInput: event.target.value,\n    //   todoList: todoState.todoList\n    // });\n    //setTodoName(event.target.value);\n  //};\n\n  const todoAddHandler = () => {\n    // setTodoState({\n    //   userInput: todoState.userInput,\n    //   todoList: todoState.todoList.concat(todoState.userInput)\n    // });\n    const todoName = todoInputRef.current.value;\n\n    axios\n      .post('https://hooks2.firebaseio.com/todos.json', { name: todoName })\n      .then(res => {\n        setTimeout(() => {\n          const todoItem = { id: res.data.name, name: todoName };\n          dispatch({ type: 'ADD', payload: todoItem });\n        }, 3000);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const todoRemoveHandler = todoId => {\n    axios\n      .delete(`https://hooks2.firebaseio.com/todos/${todoId}.json`)\n      .then(res => {\n        dispatch({ type: 'REMOVE', payload: todoId });\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <React.Fragment>\n      <input\n        type=\"text\"\n        placeholder=\"Todo\"\n        ref={todoInputRef}\n        onChange={inputValidationHandler}\n        style={{backgroundColor: inputIsValid ? 'transparent' : 'red'}}\n      />\n      <button type=\"button\" onClick={todoAddHandler}>\n        Add\n      </button>\n      {useMemo(()=><List\n      items={todoList}\n      onClick={todoRemoveHandler}\n      />,[todoList])}\n    </React.Fragment>\n  );\n};\n\nexport default todo;","import React from 'react'\n\nconst authContext = React.createContext({status: false, login: ()=>{\n    \n}})\n\nexport default authContext","import React, {useContext} from 'react'\nimport AuthContext from '../auth.context'\n\nconst Header = props => {\n    const auth = useContext(AuthContext)\n    return(\n    <header>\n        {auth.status?<button onClick={props.onLoadTodos}>Todo List</button>:null}\n        <button onClick={props.onLoadAuth}>Auth</button>\n    </header>\n)}\n\nexport default Header","import React, {useContext} from 'react'\nimport AuthContext from '../auth.context'\n\nconst auth = props => {\n\n    const auth = useContext(AuthContext)\n\n    return <button onClick={auth.login}>Log in!</button>\n}\n\nexport default auth","import React, {useState} from 'react';\n\nimport Todo from './components/Todo'\nimport Header from './components/Header'\nimport Auth from './components/Auth'\nimport AuthContext from './auth.context'\n\nconst app = props => {\n\nconst [page, setPage] = useState('auth')\nconst [authStates,setAuthStates] = useState(false)\n\nconst switchPage = (pageName) => {\n  setPage(pageName)\n}\n\nconst login = () => {\n  setAuthStates(true)\n}\n\n  return(\n      <div className=\"App\">\n      <AuthContext.Provider value={{status: authStates, login: login}}>\n        <Header \n        onLoadTodos={switchPage.bind(this,'todos')} \n        onLoadAuth={switchPage.bind(this,'auth')}\n        />\n        {page==='auth'? <Auth/> : <Todo/>}\n      </AuthContext.Provider>\n      </div>\n  )\n};\n\n\nexport default app;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}